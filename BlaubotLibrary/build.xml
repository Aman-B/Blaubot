<?xml version="1.0"?>
<project name="BlauBot" default="jar" basedir=".">
	<!-- Sets variables which can later be used. -->
	<!-- The value of a property is accessed via ${} -->
	<property name="src.dir" location="src" />
	<property name="tests.src.dir" location="../BlaubotTests/src" />
	<property name="build.dir" location="build" />
	<property name="jar.dir" location="${build.dir}/jar" />
    <property name="classes.dir" value="${build.dir}/classes"/>
	<property name="tests.classes.dir" location="../BlaubotTests/classes" />
	
	<!-- Variables used for JUnit testin -->
	<property name="test.dir" location="src" />
	<property name="report.dir" location="${build.dir}/reports" />
	<property name="report.junit.dir" location="${report.dir}/junit" />
	
	<!-- Findbugs path -->
	<property name="findbugs.dir" value="../BlaubotTests/libs/findbugs" />
	
	<!-- Define the classpath which includes the jars and the classes after compiling -->
	<path id="classpath">
		<!-- include all jars in libs folder -->
		<fileset dir="../BlaubotTests/libs">
	    	<include name="junit/**/*.jar"/>
		</fileset>
		<pathelement location="../BlaubotTests/libs/findbugs/lib/findbugs.jar" />
		<pathelement location="${build.dir}" />
		<pathelement location="${classes.dir}" />
		<pathelement location="${tests.classes.dir}" />
	</path>
	
	<!-- Deletes the existing build, docs and dist directory -->
	<target name="clean">
		<delete dir="${build.dir}" />
	</target>
	
	<!-- Creates the build, docs and dist directory -->
	<target name="makedir">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${classes.dir}" />
		<mkdir dir="${tests.classes.dir}" />
		<mkdir dir="${report.dir}" />
		<mkdir dir="${report.junit.dir}" />
	</target>
	
	<!-- Compiles the java code (including the usage of library for JUnit) -->
	<target name="compile" depends="clean, makedir">
		<javac includeantruntime="false" srcdir="${src.dir}" destdir="${classes.dir}">
			<classpath refid="classpath" />
		</javac>
	</target>
	
	<!-- Compiles the java code (including the usage of library for JUnit) -->
	<target name="compileTests" depends="compile">
		<javac includeantruntime="false" srcdir="${tests.src.dir}" destdir="${tests.classes.dir}">
			<classpath refid="classpath" />
		</javac>
	</target>
	
	<target name="jar" depends="compile, checkstyle, findbugs">
        <mkdir dir="${jar.dir}" />
        <jar basedir="${classes.dir}" destfile="${jar.dir}/Blaubot.jar" />
    </target>
	
	<!-- findbugs -->
	<taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask">
		<classpath>
			<pathelement location="../BlaubotTests/libs/findbugs/lib/findbugs-ant.jar" />
		</classpath>
	</taskdef>
	
	<target name="findbugs" >			
		<findbugs
			home='${findbugs.dir}'
			output='xml'
			outputFile='${report.dir}/findbugs_report.xml'
			excludefilter="exclude.xml" >
			<sourcePath location='${src.dir}' />
			<class location='${classes.dir}'/>
		</findbugs>
	</target>
		
	<!-- checkstyle -->
	<taskdef resource="checkstyletask.properties" classpath="../BlaubotTests/libs/checkstyle/checkstyle-5.7-all.jar"/>
			 
	<target	name="checkstyle" description="Generates a report of code convention violations.">

		<checkstyle config="blaubot_checks.xml"
			failureProperty="checkstyle.failure"
			failOnViolation="false">
			<formatter type="xml" tofile="${report.dir}/checkstyle_report.xml"/>
			<fileset dir="${src.dir}" includes="**/*.java"/>
		</checkstyle>

	</target>
	
	<!-- Run the JUnit Tests -->
	<!-- Output is XML, could also be plain -->
	<target name="junit" depends="jar">
		<junit fork="true" haltonfailure="yes">
	
			<!-- Serenity system properties. -->
<!-- 			<sysproperty key="included.packages" value="de.hsrm.blaubot" /> -->
<!-- 			<sysproperty key="included.adapters" value="coverage,complexity,dependency" /> -->
			<!-- Serenity JVM command line. -->
<!-- 			<jvmarg line="-javaagent:../BlaubotTests/libs/serenity/serenity.jar" /> -->
			
			<classpath refid="classpath" />
			<formatter type="xml" /> <!-- to file -->
			<formatter type="plain" usefile="false" /> <!-- to screen -->
			<batchtest todir="${report.junit.dir}">
				<fileset dir="${tests.src.dir}">
					<include name="**/*Test*.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>
	
	<target name="junitreport">
        <junitreport todir="${report.junit.dir}">
            <fileset dir="${report.junit.dir}" includes="TEST-*.xml"/>
            <report todir="${report.junit.dir}"/>
        </junitreport>
	</target>
	
</project>